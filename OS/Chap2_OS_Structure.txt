Chapter2. 운영체제 핵심 개념 - 운영체제 구조

응용 프로그램이 운영체제에게 자원요청 > 운영체제가 응용프로그램에 적절한 하드웨어(자원) 할당 > 사용 완료 시 자원회수

운영체제는 응용 프로그램이 요청하는 메모리를 허가, 분배하며 CPU시간을 제공하고, IO devices 사용을 허가/제어한다.

운영체제는 사용자 인터페이스를 제공한다.
- 쉘 (Shell) : 사용자가 OS 기능과 서비스를 조작할 수 있도록 인터페이스를 제공하는 프로그램
(쉘은 터미널 환경(CLI)과, GUI 환경 두 종류로 분류)

운영체제는 응용 프로그램을 위해서도 인터페이스를 제공한다.
- API (Application Programming Interface) : 함수로 제공
- 보통은 라이브러리 형태로 제공

시스템 콜 
- 시스템 콜 또는 시스템 호출 인터페이스
- 운영체제가 운영체제 각 기능을 사용할 수 있도록 시스템 콜이라는 명령 또는 함수를 제공
- API 내부에는 시스템콜을 호출하는 형태로 만들어지는 경우가 대부분이다.

운영체제를 만든다면?

1. 운영체제를 개발한다. (kernel)
2. 시스템 콜을 개발한다.
3. C API (library) 개발
4. Shell 프로그램 개발
5. 응용 프로그램 개발

가볍게 이해
API : 각 언어별 운영체제 기능 호출 인터페이스 함수 (각 언어별 인터페이스)
시스템콜 : 운영체제 기능을 호출하는 함수

정리
- 운영체제는 컴퓨터 하드웨어와 응용 프로그램을 관리한다.
- 사용자 인터페이스를 제공하기 위해 쉘 프로그램을 제공한다.
- 응용 프로그램이 OS 기능을 요청하기 위해서, OS는 시스템 콜을 제공한다.
-- 보통 시스템 콜을 직접 사용하기 보다는, 해당 시스템 콜을 사용해서 만든 API를 사용한다.

@ Users > Application, Shell > Library or API > System Call > OS > Hardware

---

CPU Protection Rings
- CPU도 권한 모드라는 것을 가지고 있음
-- 사용자 모드 (user mode by application)
-- 커널 모드 (kernel mode by OS) : 특권 명령어 실행과 원하는 작업 수행을 위한 자원 접근을 가능케 하는 모드

# 용어 설명
Kernel : 알맹이, 핵심
Shell : 껍데기

즉, 
user mode : 응용 프로그램이 사용
kernel mode : OS가 사용

@ 응용 프로그램에서 어떤 명령은 사용자 영역에서 실행이 되고, 어떤 명령은 시스템 콜을 통해 커널 영역에서 실행이 된다.

- 커널 모드에서만 실행 가능한 기능들이 있으며,
- 커널 모드로 실행하려면, 반드시 시스템 콜을 사용해야 한다.
- 시스템 콜은 OS가 제공한다.

사용자 모드와 커널 모드
- 함부로 응용 프로그램이 전체 컴퓨터 시스템을 헤치치 못하게 한다.

정리
- OS는 시스템 콜 제공
- 프로그래밍 언어별로 OS 기능을 활용하기 위해, 시스템 콜을 기반으로 API 제공
- 응용 프로그램은 OS 기능 필요 시, 해당 API를 사용해서 프로그램을 작성
- 응용 프로그램이 실행되고, OS 기능이 필요한 API를 호출 하면, 시스템 콜이 호출되서, 커널 모드로 변경되고, OS 내부에서 해당 명령이 실행되고, 다시 응용 프로그램으로 돌아간다.