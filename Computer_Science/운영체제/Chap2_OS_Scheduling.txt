Chapter2. 운영체제 핵심 개념 - 스케쥴링

프로세스 스케쥴링
- 배치 처리 시스템
-- 여러 응용 프로그램을 실행할 때, 자동으로 다음 응용 프로그램이 실행될 수 있도록 하는 시스템.
-- 마치 queue 와 같다. 먼저 등록한 프로그램을 먼저 실행한다.
-- 등록한 순서대로 프로그램을 실행

배치 처리 시스템을 더 이상 사용하지 않는 이유 :
- 여러 프로그램을 순차적으로 실행시키는 도중,
- 어떤 프로그램은 실행 시간이 너무 많이 걸려서, 다른 프로그램이 실행하는데 기다리는 시간이 너무 긴 경우 발생
- 또, mp3 음악을 들으며, 문서 작성을 하고 싶은 경우, 배치 처리 시스템으로는 불가능. (동시에 여러 app 실행 불가)
- 다중 사용자 지원 불가

이를 해결하기 위해 시분할 시스템 등장
- 다중 사용자 지원을 위해 컴퓨터 응답 시간을 최소화하는 시스템
- 응용 프로그램이 CPU를 점유하는 시간을 잘게 쪼개어 실행될 수 있도록 하는 시스템
- ex) app1, app2, app3 을 여러개로 잘게 쪼개어 배열 > 응답시간이 짧아진다.

멀티 태스킹
- '단일' CPU에서 여러 응용 프로그램이 동시에 실행되는 것 처럼 보이도록 하는 시스템

실제 멀티 태스킹의 예
- 1000ms = 1초
- 10 ~ 20ms 단위로도 실행 응용 프로그램이 바뀌더라 >> (띄엄띄엄 실행되더라도) 사용자에게는 동시에 실행되는 것 처럼 보임

멀티 태스킹과 멀티 프로세싱
- 멀티 태스킹 : 단일 CPU
- 멀티 프로세싱 : 여러 CPU에 하나의 프로그램을 병렬로 실행해서 실행속도를 극대화 시키는 시스템

멀티 프로그래밍의 목적
- 최대한 CPU를 많이 활용하도록 하는 시스템
-- 시간 대비 CPU 활용도를 높이자
-- 응용 프로그램을 짧은 시간 안에 실행 완료를 시킬 수 있음

정리
- 시분할 시스템 : 다중 사용자 지원, 컴퓨터 응답시간을 최소화하는 시스템
- 멀티 프로그래밍 : 최대한 CPU를 일정 시간당 많이 활용하는 시스템
- 실제로는 시분할 시스템, 멀티 프로그래밍, 멀티 태스킹이 유사한 의미로 통용된다.
-- 핵심은 여러 응용 프로그램 실행을 가능토록 한다는 것
-- 응용 프로그램이 동시에 실행되는 것 처럼 보이도록 한다.
-- CPU를 쉬지 않고 응용 프로그램을 실행하도록 해서, 짧은 시간 안에 응용 프로그램이 실행 완료 될수 있도록 한다.
-- 컴퓨터 응답 시간도 짧게 하여, 다중 사용자도 지원한다.